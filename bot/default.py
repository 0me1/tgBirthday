import calendar
from datetime import datetime
from telebot.types import Message
from models.user import getUser, saveUser
from models.markup import Markup

from models.bot import bot, send


@bot.message_handler(func=lambda message: message.text == "Ha–∑–∞–¥")
def return_back(message: Message):
    user = getUser(message)
    user.state.name = "default"

    send(
        user,
        "üè† –í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é...",
        Markup.main()
    )

    saveUser(user)


@bot.message_handler(
    func=lambda message: 
        getUser(message).state.name == 'default'
)
def handle_default_state(message: Message):
    user = getUser(message)

    match (user.text):
        case '–î–æ–±–∞–≤–∏—Ç—å':
            user.state.name = 'choose_name'
            
            send(
                user,
                "<b>–ö–∞–∫ –∑–æ–≤—É—Ç —á–µ–ª–æ–≤–µ–∫–∞?</b>",
                Markup.remove()
            )
        
        case '–£–¥–∞–ª–∏—Ç—å':
            if len(user.bdays) < 1:
                
                return send(
                    user,
                    "<b>–£ –≤–∞—Å –Ω–µ—Ç—É –¥—Ä—É–∑–µ–π. –ø–ª–∞–∫–∏-–ø–ª–∞–∫–∏ :sad_emote:</b>"
                )
                
            user.state.name = "delete_friend"

            send(
                user, 
                "<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å</b> üò®",
                Markup.display_friends(user)
            )            
        
        case '–ó–∞ –º–µ—Å—è—Ü':
            empty_flag = True
            user.bdays.sort(key=lambda bd: bd.date.month)
            target_month = datetime.now().month
            text_to_send = f'\n<b>{calendar.month_name[target_month]}</b> üóì\n'
            for bd in user.bdays:
                if bd.date.month == target_month:
                    text_to_send += f'<blockquote>{bd.name}: {bd.date.day} —á–∏—Å–ª–æ</blockquote>' + '\n'
                    empty_flag = False


            if empty_flag:
                text_to_send += "–ü—É—Å—Ç–æ...\n"
            
            return send(
                user,
                text_to_send
            )

            
        case '–ó–∞ –≤–µ—Å—å –≥–æ–¥':
            user.bdays.sort(key=lambda bd: bd.date.month)
            text_to_send = ''
            last_saved_month = -1

            for bd in user.bdays:
                if bd.date.month != last_saved_month:
                    text_to_send += f'\n<b>{calendar.month_name[bd.date.month]} üóì</b>\n'
                    last_saved_month = bd.date.month
                text_to_send += f'<blockquote>{bd.name}: {bd.date.day} —á–∏—Å–ª–æ</blockquote>' + '\n'

            if len(user.bdays) < 1:
                
                text_to_send += "–ü—É—Å—Ç–æ...\n"

            return send(
                user, 
                text_to_send
            )  
        
            
    saveUser(user)