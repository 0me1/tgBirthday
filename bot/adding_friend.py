from datetime import datetime, timedelta 

from telebot.types import Message
from models.user import getUser, saveUser, Birthday
from models.markup import Markup

from models.bot import bot, send

TEMP_NAMES: dict[int, str] = {}

@bot.message_handler(
    func=lambda message: 
        getUser(message).state.name == 'choose_name'
)
def save_name(message: Message):
    user = getUser(message)
    TEMP_NAMES[user.id] = user.text
    
    for bd in user.bdays:
        if user.text == bd.name:
            return send(
                user,
                "<b>–£ –≤–∞—Å –æ—à–∏–±–æ—á–∫–∞ ‚ùå –î—Ä—É–≥ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∏–º—è</b> "
            )


    now = datetime.now()
    user.state.date = datetime(now.year, now.month, 15)
    user.state.name = 'choose_date'
    
    
    send(
        user,
        "<b>–í—ã–±–µ—Ä–µ—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞</b> üéÅ",
        Markup.calendar()
    )
    
    saveUser(user)
    
    
@bot.message_handler(
    func=lambda message: 
        getUser(message).state.name == 'choose_date'
)
def calendar_manager(message: Message):
    user = getUser(message)

    if '‚¨ÖÔ∏è' in user.text or '‚û°Ô∏è' in user.text: 
        delta = timedelta(days=(30 if '‚û°Ô∏è' in user.text else - 30))
        user.state.date += delta

        send(
            user,
            "<b>–û–±–Ω–æ–≤–ª—è—é –∫–∞–ª–µ–Ω–¥–∞—Ä—å...</b> üîÑ",
            Markup.calendar(user.state.date.month, user.state.date.year)
        )
    
    if user.text.isdigit():
        user.bdays.append(Birthday(
            name=TEMP_NAMES[user.id],
            date=datetime(
                user.state.date.year,
                user.state.date.month,
                int(user.text)
            )
        ))

        user.state.name = "default"
        
        send(
            user,
            "<b>–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω</b> üíæ",
            Markup.main()
        )
    saveUser(user)